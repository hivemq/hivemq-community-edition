plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.hierynomus.license'
    id 'com.jfrog.bintray'
}

group = 'com.hivemq'
version = '4.3.0'
description = 'SDK for the development of HiveMQ extensions'

sourceCompatibility = 10
targetCompatibility = 10

ext {
    readableName = 'HiveMQ Extension SDK'
    url = 'https://www.hivemq.com/'
    vendor = 'dc-square GmbH'
    githubOrg = 'hivemq'
    githubRepo = 'hivemq-extension-sdk'
    githubUrl = 'https://github.com/' + githubOrg + '/' + githubRepo
    scmConnection = 'scm:git:git://github.com/' + githubOrg + '/' + githubRepo + '.git'
    scmDeveloperConnection = 'scm:git:ssh://git@github.com/' + githubOrg + '/' + githubRepo + '.git'
    issuesUrl = githubUrl + '/issues'
    licenseShortName = 'Apache-2.0'
    licenseReadableName = 'The Apache License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.0.2'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Jar) {
    manifest {
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Vendor': project.vendor
        attributes 'Implementation-Version': project.version
    }
}

javadoc {
    title "${project.readableName} ${project.version} API"

    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'

    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('-html5')
    options.addBooleanOption '-no-module-directories', true

    doLast {
        javaexec {
            main = '-jar'
            args = ["${project.rootDir}/gradle/tools/javadoc-cleaner-1.0.jar"]
        }
    }
}

task javadocJar(type: Jar) {
    group 'documentation'

    from tasks.javadoc
    classifier 'javadoc'
}

task sourcesJar(type: Jar) {
    group 'build'

    from sourceSets.main.allSource
    classifier 'sources'
}

publishing {
    publications {
        extensionSdk(MavenPublication) {

            from components.java
            artifact tasks.javadocJar
            artifact tasks.sourcesJar

            pom {
                name = project.readableName
                description = project.description
                url = project.url
                licenses {
                    license {
                        name = project.licenseReadableName
                        url = project.licenseUrl
                    }
                }
                developers {
                    developer {
                        id = 'cschaebe'
                        name = 'Christoph Schaebel'
                        email = 'christoph.schaebel@hivemq.com'
                        organization = project.vendor
                        organizationUrl = project.url
                    }
                    developer {
                        id = 'lbrandl'
                        name = 'Lukas Brandl'
                        email = 'lukas.brandl@hivemq.com'
                        organization = project.vendor
                        organizationUrl = project.url
                    }
                    developer {
                        id = 'flimpoeck'
                        name = 'Florian Limpoeck'
                        email = 'florian.limpoeck@hivemq.com'
                        organization = project.vendor
                        organizationUrl = project.url
                    }
                }
                scm {
                    connection = project.scmConnection
                    developerConnection = project.scmDeveloperConnection
                    url = project.githubUrl
                }
                issueManagement {
                    system = 'github'
                    url = project.issuesUrl
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = publishing.publications.withType(MavenPublication).stream().collect { it.name }
    dryRun = false
    publish = false
    override = false
    pkg {
        userOrg = 'hivemq'
        repo = 'HiveMQ'
        name = 'hivemq-extension-sdk'
        desc = project.description
        websiteUrl = project.githubUrl
        issueTrackerUrl = project.issuesUrl
        vcsUrl = project.githubUrl + '.git'
        licenses = [project.licenseShortName]
        labels = ['hivemq', 'extension', 'sdk', 'mqtt', 'mqtt5']
        githubRepo = project.githubOrg + '/' + project.githubRepo
        githubReleaseNotesFile = 'README.adoc'
        publicDownloadNumbers = false
        version {
            released = new Date()
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = false
                user = project.hasProperty('mavenCentralUser') ? project.property('mavenCentralUser') : System.getenv('MAVEN_CENTRAL_USER')
                password = project.hasProperty('mavenCentralKey') ? project.property('mavenCentralKey') : System.getenv('MAVEN_CENTRAL_KEY')
                close = '0'
            }
        }
    }
}

license {
    header file("${project.projectDir}/HEADER")
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}
